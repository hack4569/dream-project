package com.book.login;

import lombok.extern.slf4j.Slf4j;

import javax.servlet.*;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import java.io.IOException;
import java.util.UUID;
@Slf4j
public class LoginCheckFilter implements Filter {

    private static final String[] whitelist = {"/", "/members/add"};

    @Override
    public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException{
        HttpServletRequest httpRequest = (HttpServletRequest) request;
        String requestUri = httpRequest.getRequestURI();

        HttpServletResponse httpResponse = (HttpServletResponse) response;
        try{


        if(isLoginCheckPath(requestUri)){
            HttpSession session = httpRequest.getSession(false);
            if(session == null || session.getAttribute(SessionConst.LOGIN_MEMBER) == null){
                //로그인정보가 없을 경우
                httpResponse.sendRedirect("/login?redirectURL="+requestUri);
                return;
            }
            //로그인 정보가 있을 경우
            chain.doFilter(request, response);
        }else{

        }
        }catch (Exception e){
            throw e;
        }finally {
            log.info("인증 체크 필터 종료{}",requestUri);
        }
    }

    private boolean isLoginCheckPath(String requestURI){
        return !PattternMatchUtils.simpleMatch(whitelist, requestURI);
    }
}
